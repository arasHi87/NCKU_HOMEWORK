package  	 PACKAGE
main     	 IDENT
         	 NEWLINE
         	 NEWLINE
func     	 FUNC
main     	 IDENT
(        	 LPAREN
)        	 RPAREN
{        	 LBRACE
         	 NEWLINE
var      	 VAR
x        	 IDENT
int32    	 INT
         	 NEWLINE
var      	 VAR
y        	 IDENT
float32  	 FLOAT
         	 NEWLINE
x        	 IDENT
+        	 ADD
y        	 IDENT
         	 NEWLINE
y        	 IDENT
-        	 SUB
x        	 IDENT
         	 NEWLINE
x        	 IDENT
=        	 ASSIGN
y        	 IDENT
         	 NEWLINE
3        	 INT_LIT
+        	 ADD
3.14     	 FLOAT_LIT
         	 NEWLINE
3.0      	 FLOAT_LIT
+        	 ADD
3.14     	 FLOAT_LIT
         	 NEWLINE
x        	 IDENT
%        	 REM
y        	 IDENT
         	 NEWLINE
y        	 IDENT
%        	 REM
3        	 INT_LIT
         	 NEWLINE
         	 NEWLINE
3        	 INT_LIT
&&       	 LAND
true     	 TRUE
         	 NEWLINE
false    	 FALSE
||       	 LOR
2        	 INT_LIT
+        	 ADD
2        	 INT_LIT
         	 NEWLINE
         	 NEWLINE
for      	 FOR
1.0      	 FLOAT_LIT
{        	 LBRACE
         	 NEWLINE
println  	 PRINTLN
(        	 LPAREN
1.0      	 FLOAT_LIT
)        	 RPAREN
         	 NEWLINE
}        	 RBRACE
         	 NEWLINE
         	 NEWLINE
for      	 FOR
x        	 IDENT
+        	 ADD
1        	 INT_LIT
{        	 LBRACE
         	 NEWLINE
println  	 PRINTLN
(        	 LPAREN
x        	 IDENT
)        	 RPAREN
         	 NEWLINE
}        	 RBRACE
         	 NEWLINE
         	 NEWLINE
if       	 IF
2.0      	 FLOAT_LIT
{        	 LBRACE
         	 NEWLINE
println  	 PRINTLN
(        	 LPAREN
2.0      	 FLOAT_LIT
)        	 RPAREN
         	 NEWLINE
}        	 RBRACE
         	 NEWLINE
         	 NEWLINE
if       	 IF
x        	 IDENT
{        	 LBRACE
         	 NEWLINE
println  	 PRINTLN
(        	 LPAREN
x        	 IDENT
)        	 RPAREN
         	 NEWLINE
}        	 RBRACE
         	 NEWLINE
}        	 RBRACE

Finish scanning,
total line: 32
comment line: 0
