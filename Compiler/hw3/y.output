Terminals which are not used

   SEMICOLON


State 152 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: PackageStmt NEWLINE
    5                | FunctionDeclStmt
    6                | NEWLINE

    7 PackageStmt: PACKAGE IDENT

    8 @1: /* empty */

    9 FunctionDeclStmt: FuncOpen LPAREN ParameterList RPAREN Type @1 FuncBlock

   10 @2: /* empty */

   11 FunctionDeclStmt: FuncOpen LPAREN RPAREN @2 FuncBlock

   12 FuncOpen: FUNC IDENT

   13 FuncCallStmt: IDENT LPAREN RPAREN
   14             | IDENT LPAREN ArgumentList RPAREN

   15 ArgumentList: Expression
   16             | ArgumentList COMMA Expression

   17 ParameterList: IDENT Type
   18              | ParameterList COMMA IDENT Type

   19 FuncBlock: LBRACE StatementList RBRACE

   20 ReturnStmt: RETURN
   21           | RETURN Expression

   22 Type: INT
   23     | FLOAT
   24     | STRING
   25     | BOOL

   26 Expression: UnaryExpr

   27 @3: /* empty */

   28 Expression: Expression binary_op @3 Expression

   29 UnaryExpr: PrimaryExpr
   30          | unary_op UnaryExpr

   31 binary_op: LOR
   32          | LAND
   33          | cmp_op
   34          | add_op
   35          | mul_op

   36 cmp_op: EQL
   37       | NEQ
   38       | LSS
   39       | LEQ
   40       | GTR
   41       | GEQ

   42 add_op: ADD
   43       | SUB

   44 mul_op: MUL
   45       | QUO
   46       | REM

   47 unary_op: ADD
   48         | SUB
   49         | NOT

   50 PrimaryExpr: Operand
   51            | FuncCallStmt
   52            | ConversionExpr

   53 Operand: Literal
   54        | IDENT
   55        | LPAREN Expression RPAREN

   56 Literal: INT_LIT
   57        | FLOAT_LIT
   58        | BOOL_LIT
   59        | STRING_LIT

   60 ConversionExpr: Type LPAREN Expression RPAREN

   61 Statement: DeclarationStmt NEWLINE
   62          | SimpleStmt NEWLINE
   63          | Block
   64          | IfStmt
   65          | ForStmt
   66          | SwitchStmt
   67          | CaseStmt
   68          | PrintStmt NEWLINE
   69          | ReturnStmt NEWLINE
   70          | NEWLINE

   71 SimpleStmt: AssignmentStmt
   72           | ExpressionStmt
   73           | IncDecStmt

   74 DeclarationStmt: VAR IDENT Type
   75                | VAR IDENT Type ASSIGN Expression

   76 @4: /* empty */

   77 AssignmentStmt: Expression assign_op @4 Expression

   78 assign_op: ASSIGN
   79          | ADD_ASSIGN
   80          | SUB_ASSIGN
   81          | MUL_ASSIGN
   82          | QUO_ASSIGN
   83          | REM_ASSIGN

   84 ExpressionStmt: Expression

   85 IncDecStmt: Expression INC
   86           | Expression DEC

   87 @5: /* empty */

   88 Block: LBRACE @5 StatementList RBRACE

   89 StatementList: Statement
   90              | Statement StatementList

   91 @6: /* empty */

   92 IfStmt: IF Condition @6 Block

   93 Condition: Expression

   94 @7: /* empty */

   95 @8: /* empty */

   96 ForStmt: FOR @7 Condition @8 Block

   97 @9: /* empty */

   98 SwitchStmt: SWITCH Expression @9 Block

   99 @10: /* empty */

  100 CaseStmt: CASE INT_LIT @10 COLON Block

  101 @11: /* empty */

  102 CaseStmt: DEFAULT COLON @11 Block

  103 @12: /* empty */

  104 PrintStmt: PRINT @12 LPAREN Expression RPAREN

  105 @13: /* empty */

  106 PrintStmt: PRINTLN @13 LPAREN Expression RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
VAR (258) 74 75
PACKAGE (259) 7
NEWLINE (260) 4 6 61 62 68 69 70
IDENT (261) 7 12 13 14 17 18 54 74 75
RETURN (262) 20 21
FUNC (263) 12
SEMICOLON (264)
COLON (265) 100 102
COMMA (266) 16 18
INT (267) 22
FLOAT (268) 23
BOOL (269) 25
STRING (270) 24
INC (271) 85
DEC (272) 86
GEQ (273) 41
LOR (274) 31
LAND (275) 32
EQL (276) 36
NEQ (277) 37
LSS (278) 38
LEQ (279) 39
GTR (280) 40
ASSIGN (281) 75 78
ADD_ASSIGN (282) 79
SUB_ASSIGN (283) 80
MUL_ASSIGN (284) 81
QUO_ASSIGN (285) 82
REM_ASSIGN (286) 83
IF (287) 92
FOR (288) 96
SWITCH (289) 98
CASE (290) 100
DEFAULT (291) 102
LBRACE (292) 19 88
RBRACE (293) 19 88
PRINT (294) 104
PRINTLN (295) 106
ADD (296) 42 47
SUB (297) 43 48
MUL (298) 44
QUO (299) 45
REM (300) 46
NOT (301) 49
LPAREN (302) 9 11 13 14 55 60 104 106
RPAREN (303) 9 11 13 14 55 60 104 106
INT_LIT (304) 56 100
FLOAT_LIT (305) 57
BOOL_LIT (306) 58
STRING_LIT (307) 59


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1, on right: 0
GlobalStatementList (55)
    on left: 2 3, on right: 1 2
GlobalStatement (56)
    on left: 4 5 6, on right: 2 3
PackageStmt (57)
    on left: 7, on right: 4
FunctionDeclStmt (58)
    on left: 9 11, on right: 5
@1 (59)
    on left: 8, on right: 9
@2 (60)
    on left: 10, on right: 11
FuncOpen (61)
    on left: 12, on right: 9 11
FuncCallStmt (62)
    on left: 13 14, on right: 51
ArgumentList (63)
    on left: 15 16, on right: 14 16
ParameterList (64)
    on left: 17 18, on right: 9 18
FuncBlock (65)
    on left: 19, on right: 9 11
ReturnStmt (66)
    on left: 20 21, on right: 69
Type (67)
    on left: 22 23 24 25, on right: 9 17 18 60 74 75
Expression (68)
    on left: 26 28, on right: 15 16 21 28 55 60 75 77 84 85 86 93 98
    104 106
@3 (69)
    on left: 27, on right: 28
UnaryExpr (70)
    on left: 29 30, on right: 26 30
binary_op (71)
    on left: 31 32 33 34 35, on right: 28
cmp_op (72)
    on left: 36 37 38 39 40 41, on right: 33
add_op (73)
    on left: 42 43, on right: 34
mul_op (74)
    on left: 44 45 46, on right: 35
unary_op (75)
    on left: 47 48 49, on right: 30
PrimaryExpr (76)
    on left: 50 51 52, on right: 29
Operand (77)
    on left: 53 54 55, on right: 50
Literal (78)
    on left: 56 57 58 59, on right: 53
ConversionExpr (79)
    on left: 60, on right: 52
Statement (80)
    on left: 61 62 63 64 65 66 67 68 69 70, on right: 89 90
SimpleStmt (81)
    on left: 71 72 73, on right: 62
DeclarationStmt (82)
    on left: 74 75, on right: 61
AssignmentStmt (83)
    on left: 77, on right: 71
@4 (84)
    on left: 76, on right: 77
assign_op (85)
    on left: 78 79 80 81 82 83, on right: 77
ExpressionStmt (86)
    on left: 84, on right: 72
IncDecStmt (87)
    on left: 85 86, on right: 73
Block (88)
    on left: 88, on right: 63 92 96 98 100 102
@5 (89)
    on left: 87, on right: 88
StatementList (90)
    on left: 89 90, on right: 19 88 90
IfStmt (91)
    on left: 92, on right: 64
@6 (92)
    on left: 91, on right: 92
Condition (93)
    on left: 93, on right: 92 96
ForStmt (94)
    on left: 96, on right: 65
@7 (95)
    on left: 94, on right: 96
@8 (96)
    on left: 95, on right: 96
SwitchStmt (97)
    on left: 98, on right: 66
@9 (98)
    on left: 97, on right: 98
CaseStmt (99)
    on left: 100 102, on right: 67
@10 (100)
    on left: 99, on right: 100
@11 (101)
    on left: 101, on right: 102
PrintStmt (102)
    on left: 104 106, on right: 68
@12 (103)
    on left: 103, on right: 104
@13 (104)
    on left: 105, on right: 106


state 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1
    NEWLINE  shift, and go to state 2
    FUNC     shift, and go to state 3

    Program              go to state 4
    GlobalStatementList  go to state 5
    GlobalStatement      go to state 6
    PackageStmt          go to state 7
    FunctionDeclStmt     go to state 8
    FuncOpen             go to state 9


state 1

    7 PackageStmt: PACKAGE . IDENT

    IDENT  shift, and go to state 10


state 2

    6 GlobalStatement: NEWLINE .

    $default  reduce using rule 6 (GlobalStatement)


state 3

   12 FuncOpen: FUNC . IDENT

    IDENT  shift, and go to state 11


state 4

    0 $accept: Program . $end

    $end  shift, and go to state 12


state 5

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    PACKAGE  shift, and go to state 1
    NEWLINE  shift, and go to state 2
    FUNC     shift, and go to state 3

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 13
    PackageStmt       go to state 7
    FunctionDeclStmt  go to state 8
    FuncOpen          go to state 9


state 6

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


state 7

    4 GlobalStatement: PackageStmt . NEWLINE

    NEWLINE  shift, and go to state 14


state 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


state 9

    9 FunctionDeclStmt: FuncOpen . LPAREN ParameterList RPAREN Type @1 FuncBlock
   11                 | FuncOpen . LPAREN RPAREN @2 FuncBlock

    LPAREN  shift, and go to state 15


state 10

    7 PackageStmt: PACKAGE IDENT .

    $default  reduce using rule 7 (PackageStmt)


state 11

   12 FuncOpen: FUNC IDENT .

    $default  reduce using rule 12 (FuncOpen)


state 12

    0 $accept: Program $end .

    $default  accept


state 13

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


state 14

    4 GlobalStatement: PackageStmt NEWLINE .

    $default  reduce using rule 4 (GlobalStatement)


state 15

    9 FunctionDeclStmt: FuncOpen LPAREN . ParameterList RPAREN Type @1 FuncBlock
   11                 | FuncOpen LPAREN . RPAREN @2 FuncBlock

    IDENT   shift, and go to state 16
    RPAREN  shift, and go to state 17

    ParameterList  go to state 18


state 16

   17 ParameterList: IDENT . Type

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 23


state 17

   11 FunctionDeclStmt: FuncOpen LPAREN RPAREN . @2 FuncBlock

    $default  reduce using rule 10 (@2)

    @2  go to state 24


state 18

    9 FunctionDeclStmt: FuncOpen LPAREN ParameterList . RPAREN Type @1 FuncBlock
   18 ParameterList: ParameterList . COMMA IDENT Type

    COMMA   shift, and go to state 25
    RPAREN  shift, and go to state 26


state 19

   22 Type: INT .

    $default  reduce using rule 22 (Type)


state 20

   23 Type: FLOAT .

    $default  reduce using rule 23 (Type)


state 21

   25 Type: BOOL .

    $default  reduce using rule 25 (Type)


state 22

   24 Type: STRING .

    $default  reduce using rule 24 (Type)


state 23

   17 ParameterList: IDENT Type .

    $default  reduce using rule 17 (ParameterList)


state 24

   11 FunctionDeclStmt: FuncOpen LPAREN RPAREN @2 . FuncBlock

    LBRACE  shift, and go to state 27

    FuncBlock  go to state 28


state 25

   18 ParameterList: ParameterList COMMA . IDENT Type

    IDENT  shift, and go to state 29


state 26

    9 FunctionDeclStmt: FuncOpen LPAREN ParameterList RPAREN . Type @1 FuncBlock

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 30


state 27

   19 FuncBlock: LBRACE . StatementList RBRACE

    VAR         shift, and go to state 31
    NEWLINE     shift, and go to state 32
    IDENT       shift, and go to state 33
    RETURN      shift, and go to state 34
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    IF          shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    CASE        shift, and go to state 38
    DEFAULT     shift, and go to state 39
    LBRACE      shift, and go to state 40
    PRINT       shift, and go to state 41
    PRINTLN     shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt     go to state 51
    ReturnStmt       go to state 52
    Type             go to state 53
    Expression       go to state 54
    UnaryExpr        go to state 55
    unary_op         go to state 56
    PrimaryExpr      go to state 57
    Operand          go to state 58
    Literal          go to state 59
    ConversionExpr   go to state 60
    Statement        go to state 61
    SimpleStmt       go to state 62
    DeclarationStmt  go to state 63
    AssignmentStmt   go to state 64
    ExpressionStmt   go to state 65
    IncDecStmt       go to state 66
    Block            go to state 67
    StatementList    go to state 68
    IfStmt           go to state 69
    ForStmt          go to state 70
    SwitchStmt       go to state 71
    CaseStmt         go to state 72
    PrintStmt        go to state 73


state 28

   11 FunctionDeclStmt: FuncOpen LPAREN RPAREN @2 FuncBlock .

    $default  reduce using rule 11 (FunctionDeclStmt)


state 29

   18 ParameterList: ParameterList COMMA IDENT . Type

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 74


state 30

    9 FunctionDeclStmt: FuncOpen LPAREN ParameterList RPAREN Type . @1 FuncBlock

    $default  reduce using rule 8 (@1)

    @1  go to state 75


state 31

   74 DeclarationStmt: VAR . IDENT Type
   75                | VAR . IDENT Type ASSIGN Expression

    IDENT  shift, and go to state 76


state 32

   70 Statement: NEWLINE .

    $default  reduce using rule 70 (Statement)


state 33

   13 FuncCallStmt: IDENT . LPAREN RPAREN
   14             | IDENT . LPAREN ArgumentList RPAREN
   54 Operand: IDENT .

    LPAREN  shift, and go to state 77

    $default  reduce using rule 54 (Operand)


state 34

   20 ReturnStmt: RETURN .
   21           | RETURN . Expression

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    $default  reduce using rule 20 (ReturnStmt)

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 78
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 35

   92 IfStmt: IF . Condition @6 Block

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 79
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60
    Condition       go to state 80


state 36

   96 ForStmt: FOR . @7 Condition @8 Block

    $default  reduce using rule 94 (@7)

    @7  go to state 81


state 37

   98 SwitchStmt: SWITCH . Expression @9 Block

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 82
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 38

  100 CaseStmt: CASE . INT_LIT @10 COLON Block

    INT_LIT  shift, and go to state 83


state 39

  102 CaseStmt: DEFAULT . COLON @11 Block

    COLON  shift, and go to state 84


state 40

   88 Block: LBRACE . @5 StatementList RBRACE

    $default  reduce using rule 87 (@5)

    @5  go to state 85


state 41

  104 PrintStmt: PRINT . @12 LPAREN Expression RPAREN

    $default  reduce using rule 103 (@12)

    @12  go to state 86


state 42

  106 PrintStmt: PRINTLN . @13 LPAREN Expression RPAREN

    $default  reduce using rule 105 (@13)

    @13  go to state 87


state 43

   47 unary_op: ADD .

    $default  reduce using rule 47 (unary_op)


state 44

   48 unary_op: SUB .

    $default  reduce using rule 48 (unary_op)


state 45

   49 unary_op: NOT .

    $default  reduce using rule 49 (unary_op)


state 46

   55 Operand: LPAREN . Expression RPAREN

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 88
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 47

   56 Literal: INT_LIT .

    $default  reduce using rule 56 (Literal)


state 48

   57 Literal: FLOAT_LIT .

    $default  reduce using rule 57 (Literal)


state 49

   58 Literal: BOOL_LIT .

    $default  reduce using rule 58 (Literal)


state 50

   59 Literal: STRING_LIT .

    $default  reduce using rule 59 (Literal)


state 51

   51 PrimaryExpr: FuncCallStmt .

    $default  reduce using rule 51 (PrimaryExpr)


state 52

   69 Statement: ReturnStmt . NEWLINE

    NEWLINE  shift, and go to state 89


state 53

   60 ConversionExpr: Type . LPAREN Expression RPAREN

    LPAREN  shift, and go to state 90


state 54

   28 Expression: Expression . binary_op @3 Expression
   77 AssignmentStmt: Expression . assign_op @4 Expression
   84 ExpressionStmt: Expression .
   85 IncDecStmt: Expression . INC
   86           | Expression . DEC

    INC         shift, and go to state 91
    DEC         shift, and go to state 92
    GEQ         shift, and go to state 93
    LOR         shift, and go to state 94
    LAND        shift, and go to state 95
    EQL         shift, and go to state 96
    NEQ         shift, and go to state 97
    LSS         shift, and go to state 98
    LEQ         shift, and go to state 99
    GTR         shift, and go to state 100
    ASSIGN      shift, and go to state 101
    ADD_ASSIGN  shift, and go to state 102
    SUB_ASSIGN  shift, and go to state 103
    MUL_ASSIGN  shift, and go to state 104
    QUO_ASSIGN  shift, and go to state 105
    REM_ASSIGN  shift, and go to state 106
    ADD         shift, and go to state 107
    SUB         shift, and go to state 108
    MUL         shift, and go to state 109
    QUO         shift, and go to state 110
    REM         shift, and go to state 111

    $default  reduce using rule 84 (ExpressionStmt)

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115
    assign_op  go to state 116


state 55

   26 Expression: UnaryExpr .

    $default  reduce using rule 26 (Expression)


state 56

   30 UnaryExpr: unary_op . UnaryExpr

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    UnaryExpr       go to state 117
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 57

   29 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 29 (UnaryExpr)


state 58

   50 PrimaryExpr: Operand .

    $default  reduce using rule 50 (PrimaryExpr)


state 59

   53 Operand: Literal .

    $default  reduce using rule 53 (Operand)


state 60

   52 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 52 (PrimaryExpr)


state 61

   89 StatementList: Statement .
   90              | Statement . StatementList

    VAR         shift, and go to state 31
    NEWLINE     shift, and go to state 32
    IDENT       shift, and go to state 33
    RETURN      shift, and go to state 34
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    IF          shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    CASE        shift, and go to state 38
    DEFAULT     shift, and go to state 39
    LBRACE      shift, and go to state 40
    PRINT       shift, and go to state 41
    PRINTLN     shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    $default  reduce using rule 89 (StatementList)

    FuncCallStmt     go to state 51
    ReturnStmt       go to state 52
    Type             go to state 53
    Expression       go to state 54
    UnaryExpr        go to state 55
    unary_op         go to state 56
    PrimaryExpr      go to state 57
    Operand          go to state 58
    Literal          go to state 59
    ConversionExpr   go to state 60
    Statement        go to state 61
    SimpleStmt       go to state 62
    DeclarationStmt  go to state 63
    AssignmentStmt   go to state 64
    ExpressionStmt   go to state 65
    IncDecStmt       go to state 66
    Block            go to state 67
    StatementList    go to state 118
    IfStmt           go to state 69
    ForStmt          go to state 70
    SwitchStmt       go to state 71
    CaseStmt         go to state 72
    PrintStmt        go to state 73


state 62

   62 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 119


state 63

   61 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 120


state 64

   71 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 71 (SimpleStmt)


state 65

   72 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 72 (SimpleStmt)


state 66

   73 SimpleStmt: IncDecStmt .

    $default  reduce using rule 73 (SimpleStmt)


state 67

   63 Statement: Block .

    $default  reduce using rule 63 (Statement)


state 68

   19 FuncBlock: LBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 121


state 69

   64 Statement: IfStmt .

    $default  reduce using rule 64 (Statement)


state 70

   65 Statement: ForStmt .

    $default  reduce using rule 65 (Statement)


state 71

   66 Statement: SwitchStmt .

    $default  reduce using rule 66 (Statement)


state 72

   67 Statement: CaseStmt .

    $default  reduce using rule 67 (Statement)


state 73

   68 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 122


state 74

   18 ParameterList: ParameterList COMMA IDENT Type .

    $default  reduce using rule 18 (ParameterList)


state 75

    9 FunctionDeclStmt: FuncOpen LPAREN ParameterList RPAREN Type @1 . FuncBlock

    LBRACE  shift, and go to state 27

    FuncBlock  go to state 123


state 76

   74 DeclarationStmt: VAR IDENT . Type
   75                | VAR IDENT . Type ASSIGN Expression

    INT     shift, and go to state 19
    FLOAT   shift, and go to state 20
    BOOL    shift, and go to state 21
    STRING  shift, and go to state 22

    Type  go to state 124


state 77

   13 FuncCallStmt: IDENT LPAREN . RPAREN
   14             | IDENT LPAREN . ArgumentList RPAREN

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    RPAREN      shift, and go to state 125
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    ArgumentList    go to state 126
    Type            go to state 53
    Expression      go to state 127
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 78

   21 ReturnStmt: RETURN Expression .
   28 Expression: Expression . binary_op @3 Expression

    GEQ   shift, and go to state 93
    LOR   shift, and go to state 94
    LAND  shift, and go to state 95
    EQL   shift, and go to state 96
    NEQ   shift, and go to state 97
    LSS   shift, and go to state 98
    LEQ   shift, and go to state 99
    GTR   shift, and go to state 100
    ADD   shift, and go to state 107
    SUB   shift, and go to state 108
    MUL   shift, and go to state 109
    QUO   shift, and go to state 110
    REM   shift, and go to state 111

    $default  reduce using rule 21 (ReturnStmt)

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 79

   28 Expression: Expression . binary_op @3 Expression
   93 Condition: Expression .

    GEQ   shift, and go to state 93
    LOR   shift, and go to state 94
    LAND  shift, and go to state 95
    EQL   shift, and go to state 96
    NEQ   shift, and go to state 97
    LSS   shift, and go to state 98
    LEQ   shift, and go to state 99
    GTR   shift, and go to state 100
    ADD   shift, and go to state 107
    SUB   shift, and go to state 108
    MUL   shift, and go to state 109
    QUO   shift, and go to state 110
    REM   shift, and go to state 111

    $default  reduce using rule 93 (Condition)

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 80

   92 IfStmt: IF Condition . @6 Block

    $default  reduce using rule 91 (@6)

    @6  go to state 128


state 81

   96 ForStmt: FOR @7 . Condition @8 Block

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 79
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60
    Condition       go to state 129


state 82

   28 Expression: Expression . binary_op @3 Expression
   98 SwitchStmt: SWITCH Expression . @9 Block

    GEQ   shift, and go to state 93
    LOR   shift, and go to state 94
    LAND  shift, and go to state 95
    EQL   shift, and go to state 96
    NEQ   shift, and go to state 97
    LSS   shift, and go to state 98
    LEQ   shift, and go to state 99
    GTR   shift, and go to state 100
    ADD   shift, and go to state 107
    SUB   shift, and go to state 108
    MUL   shift, and go to state 109
    QUO   shift, and go to state 110
    REM   shift, and go to state 111

    $default  reduce using rule 97 (@9)

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115
    @9         go to state 130


state 83

  100 CaseStmt: CASE INT_LIT . @10 COLON Block

    $default  reduce using rule 99 (@10)

    @10  go to state 131


state 84

  102 CaseStmt: DEFAULT COLON . @11 Block

    $default  reduce using rule 101 (@11)

    @11  go to state 132


state 85

   88 Block: LBRACE @5 . StatementList RBRACE

    VAR         shift, and go to state 31
    NEWLINE     shift, and go to state 32
    IDENT       shift, and go to state 33
    RETURN      shift, and go to state 34
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    IF          shift, and go to state 35
    FOR         shift, and go to state 36
    SWITCH      shift, and go to state 37
    CASE        shift, and go to state 38
    DEFAULT     shift, and go to state 39
    LBRACE      shift, and go to state 40
    PRINT       shift, and go to state 41
    PRINTLN     shift, and go to state 42
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt     go to state 51
    ReturnStmt       go to state 52
    Type             go to state 53
    Expression       go to state 54
    UnaryExpr        go to state 55
    unary_op         go to state 56
    PrimaryExpr      go to state 57
    Operand          go to state 58
    Literal          go to state 59
    ConversionExpr   go to state 60
    Statement        go to state 61
    SimpleStmt       go to state 62
    DeclarationStmt  go to state 63
    AssignmentStmt   go to state 64
    ExpressionStmt   go to state 65
    IncDecStmt       go to state 66
    Block            go to state 67
    StatementList    go to state 133
    IfStmt           go to state 69
    ForStmt          go to state 70
    SwitchStmt       go to state 71
    CaseStmt         go to state 72
    PrintStmt        go to state 73


state 86

  104 PrintStmt: PRINT @12 . LPAREN Expression RPAREN

    LPAREN  shift, and go to state 134


state 87

  106 PrintStmt: PRINTLN @13 . LPAREN Expression RPAREN

    LPAREN  shift, and go to state 135


state 88

   28 Expression: Expression . binary_op @3 Expression
   55 Operand: LPAREN Expression . RPAREN

    GEQ     shift, and go to state 93
    LOR     shift, and go to state 94
    LAND    shift, and go to state 95
    EQL     shift, and go to state 96
    NEQ     shift, and go to state 97
    LSS     shift, and go to state 98
    LEQ     shift, and go to state 99
    GTR     shift, and go to state 100
    ADD     shift, and go to state 107
    SUB     shift, and go to state 108
    MUL     shift, and go to state 109
    QUO     shift, and go to state 110
    REM     shift, and go to state 111
    RPAREN  shift, and go to state 136

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 89

   69 Statement: ReturnStmt NEWLINE .

    $default  reduce using rule 69 (Statement)


state 90

   60 ConversionExpr: Type LPAREN . Expression RPAREN

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 137
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 91

   85 IncDecStmt: Expression INC .

    $default  reduce using rule 85 (IncDecStmt)


state 92

   86 IncDecStmt: Expression DEC .

    $default  reduce using rule 86 (IncDecStmt)


state 93

   41 cmp_op: GEQ .

    $default  reduce using rule 41 (cmp_op)


state 94

   31 binary_op: LOR .

    $default  reduce using rule 31 (binary_op)


state 95

   32 binary_op: LAND .

    $default  reduce using rule 32 (binary_op)


state 96

   36 cmp_op: EQL .

    $default  reduce using rule 36 (cmp_op)


state 97

   37 cmp_op: NEQ .

    $default  reduce using rule 37 (cmp_op)


state 98

   38 cmp_op: LSS .

    $default  reduce using rule 38 (cmp_op)


state 99

   39 cmp_op: LEQ .

    $default  reduce using rule 39 (cmp_op)


state 100

   40 cmp_op: GTR .

    $default  reduce using rule 40 (cmp_op)


state 101

   78 assign_op: ASSIGN .

    $default  reduce using rule 78 (assign_op)


state 102

   79 assign_op: ADD_ASSIGN .

    $default  reduce using rule 79 (assign_op)


state 103

   80 assign_op: SUB_ASSIGN .

    $default  reduce using rule 80 (assign_op)


state 104

   81 assign_op: MUL_ASSIGN .

    $default  reduce using rule 81 (assign_op)


state 105

   82 assign_op: QUO_ASSIGN .

    $default  reduce using rule 82 (assign_op)


state 106

   83 assign_op: REM_ASSIGN .

    $default  reduce using rule 83 (assign_op)


state 107

   42 add_op: ADD .

    $default  reduce using rule 42 (add_op)


state 108

   43 add_op: SUB .

    $default  reduce using rule 43 (add_op)


state 109

   44 mul_op: MUL .

    $default  reduce using rule 44 (mul_op)


state 110

   45 mul_op: QUO .

    $default  reduce using rule 45 (mul_op)


state 111

   46 mul_op: REM .

    $default  reduce using rule 46 (mul_op)


state 112

   28 Expression: Expression binary_op . @3 Expression

    $default  reduce using rule 27 (@3)

    @3  go to state 138


state 113

   33 binary_op: cmp_op .

    $default  reduce using rule 33 (binary_op)


state 114

   34 binary_op: add_op .

    $default  reduce using rule 34 (binary_op)


state 115

   35 binary_op: mul_op .

    $default  reduce using rule 35 (binary_op)


state 116

   77 AssignmentStmt: Expression assign_op . @4 Expression

    $default  reduce using rule 76 (@4)

    @4  go to state 139


state 117

   30 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 30 (UnaryExpr)


state 118

   90 StatementList: Statement StatementList .

    $default  reduce using rule 90 (StatementList)


state 119

   62 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 62 (Statement)


state 120

   61 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 61 (Statement)


state 121

   19 FuncBlock: LBRACE StatementList RBRACE .

    $default  reduce using rule 19 (FuncBlock)


state 122

   68 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 68 (Statement)


state 123

    9 FunctionDeclStmt: FuncOpen LPAREN ParameterList RPAREN Type @1 FuncBlock .

    $default  reduce using rule 9 (FunctionDeclStmt)


state 124

   74 DeclarationStmt: VAR IDENT Type .
   75                | VAR IDENT Type . ASSIGN Expression

    ASSIGN  shift, and go to state 140

    $default  reduce using rule 74 (DeclarationStmt)


state 125

   13 FuncCallStmt: IDENT LPAREN RPAREN .

    $default  reduce using rule 13 (FuncCallStmt)


state 126

   14 FuncCallStmt: IDENT LPAREN ArgumentList . RPAREN
   16 ArgumentList: ArgumentList . COMMA Expression

    COMMA   shift, and go to state 141
    RPAREN  shift, and go to state 142


state 127

   15 ArgumentList: Expression .
   28 Expression: Expression . binary_op @3 Expression

    GEQ   shift, and go to state 93
    LOR   shift, and go to state 94
    LAND  shift, and go to state 95
    EQL   shift, and go to state 96
    NEQ   shift, and go to state 97
    LSS   shift, and go to state 98
    LEQ   shift, and go to state 99
    GTR   shift, and go to state 100
    ADD   shift, and go to state 107
    SUB   shift, and go to state 108
    MUL   shift, and go to state 109
    QUO   shift, and go to state 110
    REM   shift, and go to state 111

    $default  reduce using rule 15 (ArgumentList)

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 128

   92 IfStmt: IF Condition @6 . Block

    LBRACE  shift, and go to state 40

    Block  go to state 143


state 129

   96 ForStmt: FOR @7 Condition . @8 Block

    $default  reduce using rule 95 (@8)

    @8  go to state 144


state 130

   98 SwitchStmt: SWITCH Expression @9 . Block

    LBRACE  shift, and go to state 40

    Block  go to state 145


state 131

  100 CaseStmt: CASE INT_LIT @10 . COLON Block

    COLON  shift, and go to state 146


state 132

  102 CaseStmt: DEFAULT COLON @11 . Block

    LBRACE  shift, and go to state 40

    Block  go to state 147


state 133

   88 Block: LBRACE @5 StatementList . RBRACE

    RBRACE  shift, and go to state 148


state 134

  104 PrintStmt: PRINT @12 LPAREN . Expression RPAREN

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 149
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 135

  106 PrintStmt: PRINTLN @13 LPAREN . Expression RPAREN

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 150
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 136

   55 Operand: LPAREN Expression RPAREN .

    $default  reduce using rule 55 (Operand)


state 137

   28 Expression: Expression . binary_op @3 Expression
   60 ConversionExpr: Type LPAREN Expression . RPAREN

    GEQ     shift, and go to state 93
    LOR     shift, and go to state 94
    LAND    shift, and go to state 95
    EQL     shift, and go to state 96
    NEQ     shift, and go to state 97
    LSS     shift, and go to state 98
    LEQ     shift, and go to state 99
    GTR     shift, and go to state 100
    ADD     shift, and go to state 107
    SUB     shift, and go to state 108
    MUL     shift, and go to state 109
    QUO     shift, and go to state 110
    REM     shift, and go to state 111
    RPAREN  shift, and go to state 151

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 138

   28 Expression: Expression binary_op @3 . Expression

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 152
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 139

   77 AssignmentStmt: Expression assign_op @4 . Expression

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 153
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 140

   75 DeclarationStmt: VAR IDENT Type ASSIGN . Expression

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 154
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 141

   16 ArgumentList: ArgumentList COMMA . Expression

    IDENT       shift, and go to state 33
    INT         shift, and go to state 19
    FLOAT       shift, and go to state 20
    BOOL        shift, and go to state 21
    STRING      shift, and go to state 22
    ADD         shift, and go to state 43
    SUB         shift, and go to state 44
    NOT         shift, and go to state 45
    LPAREN      shift, and go to state 46
    INT_LIT     shift, and go to state 47
    FLOAT_LIT   shift, and go to state 48
    BOOL_LIT    shift, and go to state 49
    STRING_LIT  shift, and go to state 50

    FuncCallStmt    go to state 51
    Type            go to state 53
    Expression      go to state 155
    UnaryExpr       go to state 55
    unary_op        go to state 56
    PrimaryExpr     go to state 57
    Operand         go to state 58
    Literal         go to state 59
    ConversionExpr  go to state 60


state 142

   14 FuncCallStmt: IDENT LPAREN ArgumentList RPAREN .

    $default  reduce using rule 14 (FuncCallStmt)


state 143

   92 IfStmt: IF Condition @6 Block .

    $default  reduce using rule 92 (IfStmt)


state 144

   96 ForStmt: FOR @7 Condition @8 . Block

    LBRACE  shift, and go to state 40

    Block  go to state 156


state 145

   98 SwitchStmt: SWITCH Expression @9 Block .

    $default  reduce using rule 98 (SwitchStmt)


state 146

  100 CaseStmt: CASE INT_LIT @10 COLON . Block

    LBRACE  shift, and go to state 40

    Block  go to state 157


state 147

  102 CaseStmt: DEFAULT COLON @11 Block .

    $default  reduce using rule 102 (CaseStmt)


state 148

   88 Block: LBRACE @5 StatementList RBRACE .

    $default  reduce using rule 88 (Block)


state 149

   28 Expression: Expression . binary_op @3 Expression
  104 PrintStmt: PRINT @12 LPAREN Expression . RPAREN

    GEQ     shift, and go to state 93
    LOR     shift, and go to state 94
    LAND    shift, and go to state 95
    EQL     shift, and go to state 96
    NEQ     shift, and go to state 97
    LSS     shift, and go to state 98
    LEQ     shift, and go to state 99
    GTR     shift, and go to state 100
    ADD     shift, and go to state 107
    SUB     shift, and go to state 108
    MUL     shift, and go to state 109
    QUO     shift, and go to state 110
    REM     shift, and go to state 111
    RPAREN  shift, and go to state 158

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 150

   28 Expression: Expression . binary_op @3 Expression
  106 PrintStmt: PRINTLN @13 LPAREN Expression . RPAREN

    GEQ     shift, and go to state 93
    LOR     shift, and go to state 94
    LAND    shift, and go to state 95
    EQL     shift, and go to state 96
    NEQ     shift, and go to state 97
    LSS     shift, and go to state 98
    LEQ     shift, and go to state 99
    GTR     shift, and go to state 100
    ADD     shift, and go to state 107
    SUB     shift, and go to state 108
    MUL     shift, and go to state 109
    QUO     shift, and go to state 110
    REM     shift, and go to state 111
    RPAREN  shift, and go to state 159

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 151

   60 ConversionExpr: Type LPAREN Expression RPAREN .

    $default  reduce using rule 60 (ConversionExpr)


state 152

   28 Expression: Expression . binary_op @3 Expression
   28           | Expression binary_op @3 Expression .

    GEQ   shift, and go to state 93
    LOR   shift, and go to state 94
    LAND  shift, and go to state 95
    EQL   shift, and go to state 96
    NEQ   shift, and go to state 97
    LSS   shift, and go to state 98
    LEQ   shift, and go to state 99
    GTR   shift, and go to state 100
    ADD   shift, and go to state 107
    SUB   shift, and go to state 108
    MUL   shift, and go to state 109
    QUO   shift, and go to state 110
    REM   shift, and go to state 111

    GEQ       [reduce using rule 28 (Expression)]
    LOR       [reduce using rule 28 (Expression)]
    LAND      [reduce using rule 28 (Expression)]
    EQL       [reduce using rule 28 (Expression)]
    NEQ       [reduce using rule 28 (Expression)]
    LSS       [reduce using rule 28 (Expression)]
    LEQ       [reduce using rule 28 (Expression)]
    GTR       [reduce using rule 28 (Expression)]
    ADD       [reduce using rule 28 (Expression)]
    SUB       [reduce using rule 28 (Expression)]
    MUL       [reduce using rule 28 (Expression)]
    QUO       [reduce using rule 28 (Expression)]
    REM       [reduce using rule 28 (Expression)]
    $default  reduce using rule 28 (Expression)

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 153

   28 Expression: Expression . binary_op @3 Expression
   77 AssignmentStmt: Expression assign_op @4 Expression .

    GEQ   shift, and go to state 93
    LOR   shift, and go to state 94
    LAND  shift, and go to state 95
    EQL   shift, and go to state 96
    NEQ   shift, and go to state 97
    LSS   shift, and go to state 98
    LEQ   shift, and go to state 99
    GTR   shift, and go to state 100
    ADD   shift, and go to state 107
    SUB   shift, and go to state 108
    MUL   shift, and go to state 109
    QUO   shift, and go to state 110
    REM   shift, and go to state 111

    $default  reduce using rule 77 (AssignmentStmt)

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 154

   28 Expression: Expression . binary_op @3 Expression
   75 DeclarationStmt: VAR IDENT Type ASSIGN Expression .

    GEQ   shift, and go to state 93
    LOR   shift, and go to state 94
    LAND  shift, and go to state 95
    EQL   shift, and go to state 96
    NEQ   shift, and go to state 97
    LSS   shift, and go to state 98
    LEQ   shift, and go to state 99
    GTR   shift, and go to state 100
    ADD   shift, and go to state 107
    SUB   shift, and go to state 108
    MUL   shift, and go to state 109
    QUO   shift, and go to state 110
    REM   shift, and go to state 111

    $default  reduce using rule 75 (DeclarationStmt)

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 155

   16 ArgumentList: ArgumentList COMMA Expression .
   28 Expression: Expression . binary_op @3 Expression

    GEQ   shift, and go to state 93
    LOR   shift, and go to state 94
    LAND  shift, and go to state 95
    EQL   shift, and go to state 96
    NEQ   shift, and go to state 97
    LSS   shift, and go to state 98
    LEQ   shift, and go to state 99
    GTR   shift, and go to state 100
    ADD   shift, and go to state 107
    SUB   shift, and go to state 108
    MUL   shift, and go to state 109
    QUO   shift, and go to state 110
    REM   shift, and go to state 111

    $default  reduce using rule 16 (ArgumentList)

    binary_op  go to state 112
    cmp_op     go to state 113
    add_op     go to state 114
    mul_op     go to state 115


state 156

   96 ForStmt: FOR @7 Condition @8 Block .

    $default  reduce using rule 96 (ForStmt)


state 157

  100 CaseStmt: CASE INT_LIT @10 COLON Block .

    $default  reduce using rule 100 (CaseStmt)


state 158

  104 PrintStmt: PRINT @12 LPAREN Expression RPAREN .

    $default  reduce using rule 104 (PrintStmt)


state 159

  106 PrintStmt: PRINTLN @13 LPAREN Expression RPAREN .

    $default  reduce using rule 106 (PrintStmt)
